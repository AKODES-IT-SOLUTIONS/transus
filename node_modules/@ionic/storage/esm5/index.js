import { __decorate } from "tslib";
import { NgModule, PLATFORM_ID } from '@angular/core';
import { provideStorage, Storage, StorageConfigToken } from './storage';
import * as ɵngcc0 from '@angular/core';
export { StorageConfigToken, Storage };
var IonicStorageModule = /** @class */ (function () {
    function IonicStorageModule() {
    }
    IonicStorageModule_1 = IonicStorageModule;
    IonicStorageModule.forRoot = function (storageConfig) {
        if (storageConfig === void 0) { storageConfig = null; }
        return {
            ngModule: IonicStorageModule_1,
            providers: [
                { provide: StorageConfigToken, useValue: storageConfig },
                {
                    provide: Storage,
                    useFactory: provideStorage,
                    deps: [StorageConfigToken, PLATFORM_ID]
                }
            ]
        };
    };
    var IonicStorageModule_1;
IonicStorageModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IonicStorageModule });
IonicStorageModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IonicStorageModule_Factory(t) { return new (t || IonicStorageModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IonicStorageModule, [{
        type: NgModule
    }], function () { return []; }, null); })();
    return IonicStorageModule;
}());
export { IonicStorageModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIm5nOi9AaW9uaWMvc3RvcmFnZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFFTCxjQUFjLEVBQ2QsT0FBTyxFQUVQLGtCQUFrQixFQUNuQixNQUFNLFdBQVcsQ0FBQzs7QUFFbkIsT0FBTyxFQUFpQixrQkFBa0IsRUFBRSxPQUFPLEVBQUUsQ0FBQztBQUd0RDtBQUNvQixJQURwQjtBQUFnQyxJQWNoQyxDQUFDO0FBQ0QsMkJBZmEsa0JBQWtCO0FBQUUsSUFDeEIsMEJBQU8sR0FBZCxVQUFlLGFBQW1DO0FBQUksUUFBdkMsOEJBQUEsRUFBQSxvQkFBbUM7QUFBSSxRQUNwRCxPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsb0JBQWtCO0FBQ2xDLFlBQU0sU0FBUyxFQUFFO0FBQ2pCLGdCQUFRLEVBQUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFFBQVEsRUFBRSxhQUFhLEVBQUU7QUFDaEUsZ0JBQVE7QUFDUixvQkFBVSxPQUFPLEVBQUUsT0FBTztBQUMxQixvQkFBVSxVQUFVLEVBQUUsY0FBYztBQUNwQyxvQkFBVSxJQUFJLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxXQUFXLENBQUU7QUFDbEQsaUJBQVM7QUFDVCxhQUFPO0FBQ1AsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0Y7SUFkWSxrQkFBa0IsK0NBRDlCLFFBQVEsRUFBRTtNQUNFLGtCQUFrQixDQWM5Qjs7O2dEQUNEO0FBQUMsSUFERCx5QkFBQztBQUNBLENBREEsQUFkRCxJQWNDO0FBQ0QsU0FmYSxrQkFBa0I7QUFDOUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycywgUExBVEZPUk1fSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIGdldERlZmF1bHRDb25maWcsXG4gIHByb3ZpZGVTdG9yYWdlLFxuICBTdG9yYWdlLFxuICBTdG9yYWdlQ29uZmlnLFxuICBTdG9yYWdlQ29uZmlnVG9rZW5cbn0gZnJvbSAnLi9zdG9yYWdlJztcblxuZXhwb3J0IHsgU3RvcmFnZUNvbmZpZywgU3RvcmFnZUNvbmZpZ1Rva2VuLCBTdG9yYWdlIH07XG5cbkBOZ01vZHVsZSgpXG5leHBvcnQgY2xhc3MgSW9uaWNTdG9yYWdlTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3Qoc3RvcmFnZUNvbmZpZzogU3RvcmFnZUNvbmZpZyA9IG51bGwpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPElvbmljU3RvcmFnZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogSW9uaWNTdG9yYWdlTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHsgcHJvdmlkZTogU3RvcmFnZUNvbmZpZ1Rva2VuLCB1c2VWYWx1ZTogc3RvcmFnZUNvbmZpZyB9LFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogU3RvcmFnZSxcbiAgICAgICAgICB1c2VGYWN0b3J5OiBwcm92aWRlU3RvcmFnZSxcbiAgICAgICAgICBkZXBzOiBbU3RvcmFnZUNvbmZpZ1Rva2VuLCBQTEFURk9STV9JRCBdXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=