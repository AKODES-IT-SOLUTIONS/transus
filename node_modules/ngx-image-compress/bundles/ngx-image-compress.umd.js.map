{"version":3,"file":"ngx-image-compress.umd.js","sources":["../../../projects/ngx-image-compress/src/lib/DOC_ORIENTATION.ts","../../../projects/ngx-image-compress/src/lib/image-compress.ts","../../../projects/ngx-image-compress/src/lib/ngx-image-compress.service.ts"],"names":["Injectable","RendererFactory2"],"mappings":"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","sourcesContent":["export enum DOC_ORIENTATION {\n  Up = 1,\n  Down = 3,\n  Right = 6,\n  Left = 8,\n  UpMirrored = 2,\n  DownMirrored = 4,\n  LeftMirrored = 5,\n  RightMirrored = 7,\n  NotJpeg = -1,\n  NotDefined = -2\n}\n","import {Renderer2} from '@angular/core';\nimport {DOC_ORIENTATION} from './DOC_ORIENTATION';\n\nexport class ImageCompress {\n\n\n  /**\n   * Get the correct Orientation value from tags, in order to write correctly in our canvas\n   */\n  static getOrientation(file: File, callback: (result: DOC_ORIENTATION) => void) {\n    const reader = new FileReader();\n    try {\n      reader.onload = function ($event) {\n        const view = new DataView(reader.result as ArrayBuffer);\n        if (view.getUint16(0, false) !== 0xFFD8) {\n          return callback(-2);\n        }\n        const length = view.byteLength;\n        let offset = 2;\n        while (offset < length) {\n          const marker = view.getUint16(offset, false);\n          offset += 2;\n          if (marker === 0xFFE1) {\n            if (view.getUint32(offset += 2, false) !== 0x45786966) {\n              return callback(-1);\n            }\n            const little = view.getUint16(offset += 6, false) === 0x4949;\n            offset += view.getUint32(offset + 4, little);\n            const tags = view.getUint16(offset, little);\n            offset += 2;\n            for (let i = 0; i < tags; i++) {\n              if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n                return callback(view.getUint16(offset + (i * 12) + 8, little));\n              }\n            }\n          } else if ((marker & 0xFF00) !== 0xFF00) {\n            break;\n          } else {\n            offset += view.getUint16(offset, false);\n          }\n        }\n        return callback(-1);\n      };\n      reader.readAsArrayBuffer(file);\n    } catch (e) {\n      return callback(0);\n    }\n\n  }\n\n\n  /**\n   * return a promise with the new image data and image orientation\n   */\n  static uploadFile(render: Renderer2): Promise<{ image: string, orientation: DOC_ORIENTATION }> {\n\n    const promise: Promise<{ image: string, orientation: DOC_ORIENTATION }> = new Promise(function (resolve, reject) {\n\n      const inputElement = render.createElement('input');\n      // should be fix the problem for safari/ios\n      document.getElementsByTagName('body')?.[0]?.append(inputElement);\n      render.setStyle(inputElement, 'display', 'none');\n      render.setProperty(inputElement, 'type', 'file');\n      render.setProperty(inputElement, 'accept', 'image/*');\n\n      render.listen(inputElement, 'click', ($event) => {\n        // console.log('MouseEvent:', $event);\n        // console.log('Input:', $event.target);\n        $event.target.value = null;\n      });\n\n\n      render.listen(inputElement, 'change', ($event) => {\n        const file: File = $event.target.files[0];\n\n        const myReader: FileReader = new FileReader();\n\n        myReader.onloadend = (e) => {\n          try {\n            ImageCompress.getOrientation(file, orientation => {\n              resolve({image: myReader.result as string, orientation});\n            });\n          } catch (e) {\n            // console.log(`ngx-image-compress error ${e}`);\n            reject(e);\n          }\n        };\n\n        try {\n          myReader.readAsDataURL(file);\n        } catch (e) {\n          console.warn(`ngx-image-compress - probably no file have been selected: ${e}`);\n          reject('No file selected');\n        }\n\n      });\n      inputElement.click();\n\n    });\n\n    return promise;\n  }\n\n\n  static compress(imageDataUrlSource: string,\n                  orientation: DOC_ORIENTATION,\n                  render: Renderer2,\n                  ratio: number = 50,\n                  quality: number = 50): Promise<string> {\n\n    const promise: Promise<string> = new Promise(function (resolve, reject) {\n\n      quality = quality / 100;\n      ratio = ratio / 100;\n      const sourceImage = new Image();\n\n      // important for safari: we need to wait for onload event\n      sourceImage.onload = function () {\n        const canvas: HTMLCanvasElement = render.createElement('canvas');\n        const ctx: CanvasRenderingContext2D = canvas.getContext('2d');\n\n        let w, h;\n        w = sourceImage.naturalWidth;\n        h = sourceImage.naturalHeight;\n\n        if (orientation === DOC_ORIENTATION.Right || orientation === DOC_ORIENTATION.Left) {\n          const t = w;\n          w = h;\n          h = t;\n        }\n\n        canvas.width = w * ratio;\n        canvas.height = h * ratio;\n\n\n        const TO_RADIANS = Math.PI / 180;\n\n        if (orientation === DOC_ORIENTATION.Up) {\n\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n\n        } else if (orientation === DOC_ORIENTATION.Right) {\n\n          ctx.save();\n          ctx.rotate(90 * TO_RADIANS);\n          ctx.translate(0, -canvas.width);\n          ctx.drawImage(sourceImage, 0, 0, canvas.height, canvas.width);\n          ctx.restore();\n\n        } else if (orientation === DOC_ORIENTATION.Left) {\n\n          ctx.save();\n          ctx.rotate(-90 * TO_RADIANS);\n          ctx.translate(-canvas.width, 0);\n          ctx.drawImage(sourceImage, 0, 0, canvas.height, canvas.width);\n          ctx.restore();\n\n        } else if (orientation === DOC_ORIENTATION.Down) {\n\n          ctx.save();\n          ctx.rotate(180 * TO_RADIANS);\n          ctx.translate(-canvas.width, -canvas.height);\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n          ctx.restore();\n\n        } else {\n          // console.warn('ngx-image-compress - no orientation value found');\n          // same as default UP\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n        }\n\n\n        const mime = imageDataUrlSource.substr(5, imageDataUrlSource.split(';')[0].length - 5);\n        // TODO test on mime\n        const result = canvas.toDataURL(mime, quality);\n\n        resolve(result);\n\n      };\n\n      sourceImage.src = imageDataUrlSource;\n\n    });\n\n    return promise;\n  }\n\n\n  /**\n   * helper to evaluate the compression rate\n   * @param s the image in base64 string format\n   */\n  static byteCount(s: string): number {\n    return encodeURI(s).split(/%..|./).length - 1;\n  }\n\n}\n","import {Injectable, Renderer2, RendererFactory2} from '@angular/core';\nimport {ImageCompress} from './image-compress';\nimport {DOC_ORIENTATION} from './DOC_ORIENTATION';\n\n@Injectable()\nexport class NgxImageCompressService {\n\n  private render: Renderer2;\n\n  public DOC_ORIENTATION = DOC_ORIENTATION;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.render = rendererFactory.createRenderer(null, null);\n  }\n\n  public byteCount(image) {\n    return ImageCompress.byteCount(image);\n  }\n\n  /** Get the correct Orientation value from the EXIF tags in the specified file. */\n  public getOrientation(file: File): Promise<DOC_ORIENTATION> {\n    return new Promise<DOC_ORIENTATION>((resolve) => {\n      ImageCompress.getOrientation(file, (result) => {\n        resolve(result);\n      });\n    });\n  }\n\n  public uploadFile(): Promise<{ image: string, orientation: DOC_ORIENTATION }> {\n    return ImageCompress.uploadFile(this.render);\n  }\n\n  public compressFile(image: string, orientation: DOC_ORIENTATION, ratio: number = 50, quality: number = 50): Promise<string> {\n    return ImageCompress.compress(image, orientation, this.render, ratio, quality);\n  }\n\n}\n"]}