/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { Angular4PaystackComponent } from './angular4-paystack.component';
import { Angular4PaystackEmbedComponent } from './angular4-paystack-embed.component';
import { Angular4PaystackDirective } from './angular4-paystack.directive';
import { Angular4PaystackService } from './angular4-paystack.service';
import { PUBLIC_KEY_TOKEN } from './paystack-token';
import * as ɵngcc0 from '@angular/core';
export class Angular4PaystackModule {
    /**
     * @param {?} token
     * @return {?}
     */
    static forRoot(token) {
        return {
            ngModule: Angular4PaystackModule,
            providers: [
                Angular4PaystackService,
                { provide: PUBLIC_KEY_TOKEN, useValue: token }
            ]
        };
    }
}
Angular4PaystackModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: Angular4PaystackModule });
Angular4PaystackModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function Angular4PaystackModule_Factory(t) { return new (t || Angular4PaystackModule)(); }, providers: [], imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Angular4PaystackModule, { declarations: function () { return [Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbedComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbedComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Angular4PaystackModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbedComponent],
                declarations: [Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbedComponent],
                providers: []
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcjQtcGF5c3RhY2subW9kdWxlLmpzIiwic291cmNlcyI6WyJuZzovYW5ndWxhcjQtcGF5c3RhY2svbGliL2FuZ3VsYXI0LXBheXN0YWNrLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQVFwRCxNQUFNLE9BQU8sc0JBQXNCO0FBQ25DO0FBQVE7QUFBd0I7QUFBbUI7QUFBUSxJQUF6RCxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQWE7QUFBSSxRQUM5QixPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsc0JBQXNCO0FBQ3RDLFlBQU0sU0FBUyxFQUFFO0FBQ2pCLGdCQUFRLHVCQUF1QjtBQUMvQixnQkFBUSxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFO0FBQ3RELGFBQU87QUFDUCxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFDSDtrREFoQkMsUUFBUSxTQUFDLGtCQUNSO0dBQU8sRUFBRSxDQUFDLFlBQVksQ0FBQyxrQkFDdkIsT0FBTyxFQUFFLENBQUMseUJBQXlCLEVBQUUseUJBQXlCLEVBQUUsOEJBQThCLENBQUMsa0JBQy9GLFlBQVksRUFBRSxDQUFDLHlCQUF5QixFQUFFO2VBQXlCLEVBQUUsOEJBQThCLENBQUMsa0JBQ3BHLFNBQVMsRUFBRSxFQUFFLGVBQ2Q7Ozs7Ozs7Ozs7QUFkQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBUUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBZkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5cclxuaW1wb3J0IHsgQW5ndWxhcjRQYXlzdGFja0NvbXBvbmVudCB9IGZyb20gJy4vYW5ndWxhcjQtcGF5c3RhY2suY29tcG9uZW50JztcclxuaW1wb3J0IHsgQW5ndWxhcjRQYXlzdGFja0VtYmVkQ29tcG9uZW50IH0gZnJvbSAnLi9hbmd1bGFyNC1wYXlzdGFjay1lbWJlZC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBbmd1bGFyNFBheXN0YWNrRGlyZWN0aXZlIH0gZnJvbSAnLi9hbmd1bGFyNC1wYXlzdGFjay5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBBbmd1bGFyNFBheXN0YWNrU2VydmljZSB9IGZyb20gJy4vYW5ndWxhcjQtcGF5c3RhY2suc2VydmljZSc7XHJcbmltcG9ydCB7IFBVQkxJQ19LRVlfVE9LRU4gfSBmcm9tICcuL3BheXN0YWNrLXRva2VuJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXHJcbiAgZXhwb3J0czogW0FuZ3VsYXI0UGF5c3RhY2tDb21wb25lbnQsIEFuZ3VsYXI0UGF5c3RhY2tEaXJlY3RpdmUsIEFuZ3VsYXI0UGF5c3RhY2tFbWJlZENvbXBvbmVudF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbQW5ndWxhcjRQYXlzdGFja0NvbXBvbmVudCwgQW5ndWxhcjRQYXlzdGFja0RpcmVjdGl2ZSwgQW5ndWxhcjRQYXlzdGFja0VtYmVkQ29tcG9uZW50XSxcclxuICBwcm92aWRlcnM6IFtdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQW5ndWxhcjRQYXlzdGFja01vZHVsZSB7XHJcbiAgc3RhdGljIGZvclJvb3QodG9rZW46IHN0cmluZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8QW5ndWxhcjRQYXlzdGFja01vZHVsZT4ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IEFuZ3VsYXI0UGF5c3RhY2tNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIEFuZ3VsYXI0UGF5c3RhY2tTZXJ2aWNlLFxyXG4gICAgICAgIHsgcHJvdmlkZTogUFVCTElDX0tFWV9UT0tFTiwgdXNlVmFsdWU6IHRva2VuIH1cclxuICAgICAgXVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19