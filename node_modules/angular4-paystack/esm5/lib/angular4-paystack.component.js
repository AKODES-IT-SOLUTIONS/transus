/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Angular4PaystackService } from './angular4-paystack.service';
/**
 * @record
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

var _c0 = ["*"];
function MyWindow() { }
if (false) {
    /** @type {?} */
    MyWindow.prototype.PaystackPop;
}
var Angular4PaystackComponent = /** @class */ (function () {
    function Angular4PaystackComponent(paystackService) {
        this.paystackService = paystackService;
        this.paymentInit = new EventEmitter();
        this.onClose = new EventEmitter(); // tslint:disable-line
        // tslint:disable-line
        this.callback = new EventEmitter();
        // tslint:disable-line
        this.isPaying = false;
    }
    /**
     * @return {?}
     */
    Angular4PaystackComponent.prototype.pay = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var errorText, payment;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        errorText = '';
                        if (this.paystackOptions && Object.keys(this.paystackOptions).length >= 2) {
                            errorText = this.valdateInput(this.paystackOptions);
                            this.generateOptions(this.paystackOptions);
                        }
                        else {
                            errorText = this.valdateInput(this);
                            this.generateOptions(this);
                        }
                        if (errorText) {
                            console.error(errorText);
                            return [2 /*return*/, errorText];
                        }
                        return [4 /*yield*/, this.paystackService.loadScript()];
                    case 1:
                        _a.sent();
                        if (this.isPaying) {
                            return [2 /*return*/];
                        }
                        if (this.paymentInit.observers.length) {
                            this.paymentInit.emit();
                        }
                        payment = window.PaystackPop.setup(this._paystackOptions);
                        payment.openIframe();
                        this.isPaying = true;
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Angular4PaystackComponent.prototype.valdateInput = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        if (!this.callback.observers.length) {
            return 'ANGULAR-PAYSTACK: Insert a callback output like so (callback)=\'PaymentComplete($event)\' to check payment status';
        }
        return this.paystackService.checkInput(obj);
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Angular4PaystackComponent.prototype.generateOptions = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        this._paystackOptions = this.paystackService.getPaystackOptions(obj);
        this._paystackOptions.onClose = (/**
         * @return {?}
         */
        function () {
            if (_this.onClose.observers.length) {
                _this.isPaying = false;
                _this.onClose.emit();
            }
        });
        this._paystackOptions.callback = (/**
         * @param {...?} response
         * @return {?}
         */
        function () {
            var _a;
            var response = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                response[_i] = arguments[_i];
            }
            _this.isPaying = false;
            (_a = _this.callback).emit.apply(_a, tslib_1.__spread(response));
        });
    };
    /** @nocollapse */
    Angular4PaystackComponent.ctorParameters = function () { return [
        { type: Angular4PaystackService }
    ]; };
    Angular4PaystackComponent.propDecorators = {
        key: [{ type: Input }],
        email: [{ type: Input }],
        amount: [{ type: Input }],
        metadata: [{ type: Input }],
        ref: [{ type: Input }],
        currency: [{ type: Input }],
        plan: [{ type: Input }],
        quantity: [{ type: Input }],
        channels: [{ type: Input }],
        subaccount: [{ type: Input }],
        transaction_charge: [{ type: Input }],
        bearer: [{ type: Input }],
        class: [{ type: Input }],
        style: [{ type: Input }],
        paystackOptions: [{ type: Input }],
        paymentInit: [{ type: Output }],
        onClose: [{ type: Output }],
        callback: [{ type: Output }]
    };
Angular4PaystackComponent.ɵfac = function Angular4PaystackComponent_Factory(t) { return new (t || Angular4PaystackComponent)(ɵngcc0.ɵɵdirectiveInject(Angular4PaystackService)); };
Angular4PaystackComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Angular4PaystackComponent, selectors: [["angular4-paystack"]], inputs: { key: "key", email: "email", amount: "amount", metadata: "metadata", ref: "ref", currency: "currency", plan: "plan", quantity: "quantity", channels: "channels", subaccount: "subaccount", transaction_charge: "transaction_charge", bearer: "bearer", class: "class", style: "style", paystackOptions: "paystackOptions" }, outputs: { paymentInit: "paymentInit", onClose: "onClose", callback: "callback" }, ngContentSelectors: _c0, decls: 2, vars: 2, consts: [[3, "ngClass", "ngStyle", "click"]], template: function Angular4PaystackComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "button", 0);
        ɵngcc0.ɵɵlistener("click", function Angular4PaystackComponent_Template_button_click_0_listener() { return ctx.pay(); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.class)("ngStyle", ctx.style);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Angular4PaystackComponent, [{
        type: Component,
        args: [{
                selector: 'angular4-paystack',
                template: "<button [ngClass]=\"class\" [ngStyle]=\"style\" (click)=\"pay()\"><ng-content></ng-content></button>"
            }]
    }], function () { return [{ type: Angular4PaystackService }]; }, { paymentInit: [{
            type: Output
        }], onClose: [{
            type: Output
        }], callback: [{
            type: Output
        }], key: [{
            type: Input
        }], email: [{
            type: Input
        }], amount: [{
            type: Input
        }], metadata: [{
            type: Input
        }], ref: [{
            type: Input
        }], currency: [{
            type: Input
        }], plan: [{
            type: Input
        }], quantity: [{
            type: Input
        }], channels: [{
            type: Input
        }], subaccount: [{
            type: Input
        }], transaction_charge: [{
            type: Input
        }], bearer: [{
            type: Input
        }], class: [{
            type: Input
        }], style: [{
            type: Input
        }], paystackOptions: [{
            type: Input
        }] }); })();
    return Angular4PaystackComponent;
}());
export { Angular4PaystackComponent };
if (false) {
    /** @type {?} */
    Angular4PaystackComponent.prototype.key;
    /** @type {?} */
    Angular4PaystackComponent.prototype.email;
    /** @type {?} */
    Angular4PaystackComponent.prototype.amount;
    /** @type {?} */
    Angular4PaystackComponent.prototype.metadata;
    /** @type {?} */
    Angular4PaystackComponent.prototype.ref;
    /** @type {?} */
    Angular4PaystackComponent.prototype.currency;
    /** @type {?} */
    Angular4PaystackComponent.prototype.plan;
    /** @type {?} */
    Angular4PaystackComponent.prototype.quantity;
    /** @type {?} */
    Angular4PaystackComponent.prototype.channels;
    /** @type {?} */
    Angular4PaystackComponent.prototype.subaccount;
    /** @type {?} */
    Angular4PaystackComponent.prototype.transaction_charge;
    /** @type {?} */
    Angular4PaystackComponent.prototype.bearer;
    /** @type {?} */
    Angular4PaystackComponent.prototype.class;
    /** @type {?} */
    Angular4PaystackComponent.prototype.style;
    /** @type {?} */
    Angular4PaystackComponent.prototype.paystackOptions;
    /** @type {?} */
    Angular4PaystackComponent.prototype.paymentInit;
    /** @type {?} */
    Angular4PaystackComponent.prototype.onClose;
    /** @type {?} */
    Angular4PaystackComponent.prototype.callback;
    /** @type {?} */
    Angular4PaystackComponent.prototype._paystackOptions;
    /**
     * @type {?}
     * @private
     */
    Angular4PaystackComponent.prototype.isPaying;
    /**
     * @type {?}
     * @private
     */
    Angular4PaystackComponent.prototype.paystackService;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,