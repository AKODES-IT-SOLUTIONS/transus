/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
import { Angular4PaystackService } from './angular4-paystack.service';
/**
 * @record
 */
import * as ɵngcc0 from '@angular/core';
function MyWindow() { }
if (false) {
    /** @type {?} */
    MyWindow.prototype.PaystackPop;
}
var Angular4PaystackEmbedComponent = /** @class */ (function () {
    function Angular4PaystackEmbedComponent(paystackService) {
        this.paystackService = paystackService;
        this.paymentInit = new EventEmitter();
        this.onClose = new EventEmitter(); // tslint:disable-line
        // tslint:disable-line
        this.callback = new EventEmitter();
    }
    /**
     * @return {?}
     */
    Angular4PaystackEmbedComponent.prototype.pay = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var errorText, payment;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        errorText = '';
                        if (this.paystackOptions && Object.keys(this.paystackOptions).length >= 2) {
                            errorText = this.valdateInput(this.paystackOptions);
                            this.generateOptions(this.paystackOptions);
                        }
                        else {
                            errorText = this.valdateInput(this);
                            this.generateOptions(this);
                        }
                        if (errorText) {
                            console.error(errorText);
                            return [2 /*return*/, errorText];
                        }
                        return [4 /*yield*/, this.paystackService.loadScript()];
                    case 1:
                        _a.sent();
                        if (this.paymentInit.observers.length) {
                            this.paymentInit.emit();
                        }
                        payment = window.PaystackPop.setup(this._paystackOptions);
                        payment.openIframe();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Angular4PaystackEmbedComponent.prototype.valdateInput = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        if (!this.callback.observers.length) {
            return 'ANGULAR-PAYSTACK: Insert a callback output like so (callback)=\'PaymentComplete($event)\' to check payment status';
        }
        return this.paystackService.checkInput(obj);
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Angular4PaystackEmbedComponent.prototype.generateOptions = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        this._paystackOptions = this.paystackService.getPaystackOptions(obj);
        this._paystackOptions.onClose = (/**
         * @return {?}
         */
        function () {
            if (_this.onClose.observers.length) {
                _this.onClose.emit();
            }
        });
        this._paystackOptions.callback = (/**
         * @param {...?} response
         * @return {?}
         */
        function () {
            var _a;
            var response = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                response[_i] = arguments[_i];
            }
            (_a = _this.callback).emit.apply(_a, tslib_1.__spread(response));
        });
    };
    /**
     * @return {?}
     */
    Angular4PaystackEmbedComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                console.error('ANGULAR-PAYSTACK: The paystack embed option is deprecated. Please use the paystack component or directive');
                this.pay();
                return [2 /*return*/];
            });
        });
    };
    /** @nocollapse */
    Angular4PaystackEmbedComponent.ctorParameters = function () { return [
        { type: Angular4PaystackService }
    ]; };
    Angular4PaystackEmbedComponent.propDecorators = {
        key: [{ type: Input }],
        email: [{ type: Input }],
        amount: [{ type: Input }],
        metadata: [{ type: Input }],
        channels: [{ type: Input }],
        ref: [{ type: Input }],
        currency: [{ type: Input }],
        plan: [{ type: Input }],
        quantity: [{ type: Input }],
        subaccount: [{ type: Input }],
        transaction_charge: [{ type: Input }],
        bearer: [{ type: Input }],
        paystackOptions: [{ type: Input }],
        paymentInit: [{ type: Output }],
        onClose: [{ type: Output }],
        callback: [{ type: Output }]
    };
Angular4PaystackEmbedComponent.ɵfac = function Angular4PaystackEmbedComponent_Factory(t) { return new (t || Angular4PaystackEmbedComponent)(ɵngcc0.ɵɵdirectiveInject(Angular4PaystackService)); };
Angular4PaystackEmbedComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Angular4PaystackEmbedComponent, selectors: [["angular4-paystack-embed"]], inputs: { key: "key", email: "email", amount: "amount", metadata: "metadata", channels: "channels", ref: "ref", currency: "currency", plan: "plan", quantity: "quantity", subaccount: "subaccount", transaction_charge: "transaction_charge", bearer: "bearer", paystackOptions: "paystackOptions" }, outputs: { paymentInit: "paymentInit", onClose: "onClose", callback: "callback" }, decls: 1, vars: 0, consts: [["id", "paystackEmbedContainer"]], template: function Angular4PaystackEmbedComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "div", 0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Angular4PaystackEmbedComponent, [{
        type: Component,
        args: [{
                selector: 'angular4-paystack-embed',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: "<div id=\"paystackEmbedContainer\"></div>"
            }]
    }], function () { return [{ type: Angular4PaystackService }]; }, { paymentInit: [{
            type: Output
        }], onClose: [{
            type: Output
        }], callback: [{
            type: Output
        }], key: [{
            type: Input
        }], email: [{
            type: Input
        }], amount: [{
            type: Input
        }], metadata: [{
            type: Input
        }], channels: [{
            type: Input
        }], ref: [{
            type: Input
        }], currency: [{
            type: Input
        }], plan: [{
            type: Input
        }], quantity: [{
            type: Input
        }], subaccount: [{
            type: Input
        }], transaction_charge: [{
            type: Input
        }], bearer: [{
            type: Input
        }], paystackOptions: [{
            type: Input
        }] }); })();
    return Angular4PaystackEmbedComponent;
}());
export { Angular4PaystackEmbedComponent };
if (false) {
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.key;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.email;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.amount;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.metadata;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.channels;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.ref;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.currency;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.plan;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.quantity;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.subaccount;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.transaction_charge;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.bearer;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.paystackOptions;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.paymentInit;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.onClose;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype.callback;
    /** @type {?} */
    Angular4PaystackEmbedComponent.prototype._paystackOptions;
    /**
     * @type {?}
     * @private
     */
    Angular4PaystackEmbedComponent.prototype.paystackService;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,