/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';
import { Angular4PaystackService } from './angular4-paystack.service';
/**
 * @record
 */
import * as ɵngcc0 from '@angular/core';
function MyWindow() { }
if (false) {
    /** @type {?} */
    MyWindow.prototype.PaystackPop;
}
var Angular4PaystackDirective = /** @class */ (function () {
    function Angular4PaystackDirective(paystackService) {
        this.paystackService = paystackService;
        this.paymentInit = new EventEmitter(); // tslint:disable-line
        // tslint:disable-line
        this.onClose = new EventEmitter(); // tslint:disable-line
        // tslint:disable-line
        this.callback = new EventEmitter();
        // tslint:disable-line
        this.isPaying = false;
    }
    /**
     * @return {?}
     */
    Angular4PaystackDirective.prototype.pay = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var errorText, payment;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        errorText = '';
                        if (this.paystackOptions && Object.keys(this.paystackOptions).length >= 2) {
                            errorText = this.valdateInput(this.paystackOptions);
                            this.generateOptions(this.paystackOptions);
                        }
                        else {
                            errorText = this.valdateInput(this);
                            this.generateOptions(this);
                        }
                        if (errorText) {
                            console.error(errorText);
                            return [2 /*return*/, errorText];
                        }
                        return [4 /*yield*/, this.paystackService.loadScript()];
                    case 1:
                        _a.sent();
                        if (this.isPaying) {
                            return [2 /*return*/];
                        }
                        if (this.paymentInit.observers.length) {
                            this.paymentInit.emit();
                        }
                        payment = window.PaystackPop.setup(this._paystackOptions);
                        payment.openIframe();
                        this.isPaying = true;
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Angular4PaystackDirective.prototype.valdateInput = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        if (!this.callback.observers.length) {
            return 'ANGULAR-PAYSTACK: Insert a callback output like so (callback)=\'PaymentComplete($event)\' to check payment status';
        }
        return this.paystackService.checkInput(obj);
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Angular4PaystackDirective.prototype.generateOptions = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        this._paystackOptions = this.paystackService.getPaystackOptions(obj);
        this._paystackOptions.onClose = (/**
         * @return {?}
         */
        function () {
            if (_this.onClose.observers.length) {
                _this.isPaying = false;
                _this.onClose.emit();
            }
        });
        this._paystackOptions.callback = (/**
         * @param {...?} response
         * @return {?}
         */
        function () {
            var _a;
            var response = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                response[_i] = arguments[_i];
            }
            _this.isPaying = false;
            (_a = _this.callback).emit.apply(_a, tslib_1.__spread(response));
        });
    };
    /**
     * @return {?}
     */
    Angular4PaystackDirective.prototype.buttonClick = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.pay();
                return [2 /*return*/];
            });
        });
    };
    /** @nocollapse */
    Angular4PaystackDirective.ctorParameters = function () { return [
        { type: Angular4PaystackService }
    ]; };
    Angular4PaystackDirective.propDecorators = {
        key: [{ type: Input }],
        email: [{ type: Input }],
        amount: [{ type: Input }],
        metadata: [{ type: Input }],
        ref: [{ type: Input }],
        currency: [{ type: Input }],
        plan: [{ type: Input }],
        quantity: [{ type: Input }],
        subaccount: [{ type: Input }],
        channels: [{ type: Input }],
        transaction_charge: [{ type: Input }],
        bearer: [{ type: Input }],
        class: [{ type: Input }],
        style: [{ type: Input }],
        paystackOptions: [{ type: Input }],
        paymentInit: [{ type: Output }],
        onClose: [{ type: Output }],
        callback: [{ type: Output }],
        buttonClick: [{ type: HostListener, args: ['click',] }]
    };
Angular4PaystackDirective.ɵfac = function Angular4PaystackDirective_Factory(t) { return new (t || Angular4PaystackDirective)(ɵngcc0.ɵɵdirectiveInject(Angular4PaystackService)); };
Angular4PaystackDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Angular4PaystackDirective, selectors: [["", "angular4-paystack", ""]], hostBindings: function Angular4PaystackDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function Angular4PaystackDirective_click_HostBindingHandler() { return ctx.buttonClick(); });
    } }, inputs: { key: "key", email: "email", amount: "amount", metadata: "metadata", ref: "ref", currency: "currency", plan: "plan", quantity: "quantity", subaccount: "subaccount", channels: "channels", transaction_charge: "transaction_charge", bearer: "bearer", class: "class", style: "style", paystackOptions: "paystackOptions" }, outputs: { paymentInit: "paymentInit", onClose: "onClose", callback: "callback" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Angular4PaystackDirective, [{
        type: Directive,
        args: [{
                selector: '[angular4-paystack]'
            }]
    }], function () { return [{ type: Angular4PaystackService }]; }, { paymentInit: [{
            type: Output
        }], onClose: [{
            type: Output
        }], callback: [{
            type: Output
        }], buttonClick: [{
            type: HostListener,
            args: ['click']
        }], key: [{
            type: Input
        }], email: [{
            type: Input
        }], amount: [{
            type: Input
        }], metadata: [{
            type: Input
        }], ref: [{
            type: Input
        }], currency: [{
            type: Input
        }], plan: [{
            type: Input
        }], quantity: [{
            type: Input
        }], subaccount: [{
            type: Input
        }], channels: [{
            type: Input
        }], transaction_charge: [{
            type: Input
        }], bearer: [{
            type: Input
        }], class: [{
            type: Input
        }], style: [{
            type: Input
        }], paystackOptions: [{
            type: Input
        }] }); })();
    return Angular4PaystackDirective;
}());
export { Angular4PaystackDirective };
if (false) {
    /** @type {?} */
    Angular4PaystackDirective.prototype.key;
    /** @type {?} */
    Angular4PaystackDirective.prototype.email;
    /** @type {?} */
    Angular4PaystackDirective.prototype.amount;
    /** @type {?} */
    Angular4PaystackDirective.prototype.metadata;
    /** @type {?} */
    Angular4PaystackDirective.prototype.ref;
    /** @type {?} */
    Angular4PaystackDirective.prototype.currency;
    /** @type {?} */
    Angular4PaystackDirective.prototype.plan;
    /** @type {?} */
    Angular4PaystackDirective.prototype.quantity;
    /** @type {?} */
    Angular4PaystackDirective.prototype.subaccount;
    /** @type {?} */
    Angular4PaystackDirective.prototype.channels;
    /** @type {?} */
    Angular4PaystackDirective.prototype.transaction_charge;
    /** @type {?} */
    Angular4PaystackDirective.prototype.bearer;
    /** @type {?} */
    Angular4PaystackDirective.prototype.class;
    /** @type {?} */
    Angular4PaystackDirective.prototype.style;
    /** @type {?} */
    Angular4PaystackDirective.prototype.paystackOptions;
    /** @type {?} */
    Angular4PaystackDirective.prototype.paymentInit;
    /** @type {?} */
    Angular4PaystackDirective.prototype.onClose;
    /** @type {?} */
    Angular4PaystackDirective.prototype.callback;
    /**
     * @type {?}
     * @private
     */
    Angular4PaystackDirective.prototype._paystackOptions;
    /**
     * @type {?}
     * @private
     */
    Angular4PaystackDirective.prototype.isPaying;
    /**
     * @type {?}
     * @private
     */
    Angular4PaystackDirective.prototype.paystackService;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,