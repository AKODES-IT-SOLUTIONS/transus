'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var core$1 = require('@angular/core');
var core = require('@ionic-native/core');

var ɵngcc0 = require('@angular/core');
var SocialSharing = /** @class */ (function (_super) {
    tslib.__extends(SocialSharing, _super);
    function SocialSharing() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SocialSharing.prototype.share = function (message, subject, file, url) { return core.cordova(this, "share", { "successIndex": 4, "errorIndex": 5 }, arguments); };
    SocialSharing.prototype.shareWithOptions = function (options) { return core.cordova(this, "shareWithOptions", { "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.canShareVia = function (appName, message, subject, image, url) { return core.cordova(this, "canShareVia", { "successIndex": 5, "errorIndex": 6, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.shareViaTwitter = function (message, image, url) { return core.cordova(this, "shareViaTwitter", { "successIndex": 3, "errorIndex": 4, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.shareViaFacebook = function (message, image, url) { return core.cordova(this, "shareViaFacebook", { "successIndex": 3, "errorIndex": 4, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.shareViaFacebookWithPasteMessageHint = function (message, image, url, pasteMessageHint) { return core.cordova(this, "shareViaFacebookWithPasteMessageHint", { "successIndex": 4, "errorIndex": 5, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.shareViaInstagram = function (message, image) { return core.cordova(this, "shareViaInstagram", { "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.shareViaWhatsApp = function (message, image, url) { return core.cordova(this, "shareViaWhatsApp", { "successIndex": 3, "errorIndex": 4, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.shareViaWhatsAppToReceiver = function (receiver, message, image, url) { return core.cordova(this, "shareViaWhatsAppToReceiver", { "successIndex": 4, "errorIndex": 5, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.shareViaSMS = function (messge, phoneNumber) { return core.cordova(this, "shareViaSMS", { "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.canShareViaEmail = function () { return core.cordova(this, "canShareViaEmail", { "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.shareViaEmail = function (message, subject, to, cc, bcc, files) { return core.cordova(this, "shareViaEmail", { "platforms": ["iOS", "Android"], "successIndex": 6, "errorIndex": 7 }, arguments); };
    SocialSharing.prototype.shareVia = function (appName, message, subject, image, url) { return core.cordova(this, "shareVia", { "successIndex": 5, "errorIndex": 6, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.prototype.setIPadPopupCoordinates = function (targetBounds) { return core.cordova(this, "setIPadPopupCoordinates", { "sync": true, "platforms": ["iOS"] }, arguments); };
    SocialSharing.prototype.saveToPhotoAlbum = function (fileOrFileArray) { return core.cordova(this, "saveToPhotoAlbum", { "platforms": ["iOS"] }, arguments); };
    SocialSharing.prototype.shareViaWhatsAppToPhone = function (phone, message, fileOrFileArray, url) { return core.cordova(this, "shareViaWhatsAppToPhone", { "successIndex": 5, "errorIndex": 6, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharing.pluginName = "SocialSharing";
    SocialSharing.plugin = "cordova-plugin-x-socialsharing";
    SocialSharing.pluginRef = "plugins.socialsharing";
    SocialSharing.repo = "https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin";
    SocialSharing.platforms = ["Android", "Browser", "iOS", "Windows", "Windows Phone"];
SocialSharing.ɵfac = function SocialSharing_Factory(t) { return ɵSocialSharing_BaseFactory(t || SocialSharing); };
SocialSharing.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SocialSharing, factory: function (t) { return SocialSharing.ɵfac(t); } });
var ɵSocialSharing_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(SocialSharing);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocialSharing, [{
        type: core$1.Injectable
    }], null, null); })();
    return SocialSharing;
}(core.IonicNativePlugin));

exports.SocialSharing = SocialSharing;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJidW5kbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7MEJBR007QUFDTjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxudmFyIHRzbGliID0gcmVxdWlyZSgndHNsaWInKTtcbnZhciBjb3JlJDEgPSByZXF1aXJlKCdAYW5ndWxhci9jb3JlJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJ0Bpb25pYy1uYXRpdmUvY29yZScpO1xuXG52YXIgU29jaWFsU2hhcmluZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICB0c2xpYi5fX2V4dGVuZHMoU29jaWFsU2hhcmluZywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTb2NpYWxTaGFyaW5nKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIFNvY2lhbFNoYXJpbmcucHJvdG90eXBlLnNoYXJlID0gZnVuY3Rpb24gKG1lc3NhZ2UsIHN1YmplY3QsIGZpbGUsIHVybCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic2hhcmVcIiwgeyBcInN1Y2Nlc3NJbmRleFwiOiA0LCBcImVycm9ySW5kZXhcIjogNSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIFNvY2lhbFNoYXJpbmcucHJvdG90eXBlLnNoYXJlV2l0aE9wdGlvbnMgPSBmdW5jdGlvbiAob3B0aW9ucykgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic2hhcmVXaXRoT3B0aW9uc1wiLCB7IFwicGxhdGZvcm1zXCI6IFtcImlPU1wiLCBcIkFuZHJvaWRcIl0gfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTb2NpYWxTaGFyaW5nLnByb3RvdHlwZS5jYW5TaGFyZVZpYSA9IGZ1bmN0aW9uIChhcHBOYW1lLCBtZXNzYWdlLCBzdWJqZWN0LCBpbWFnZSwgdXJsKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJjYW5TaGFyZVZpYVwiLCB7IFwic3VjY2Vzc0luZGV4XCI6IDUsIFwiZXJyb3JJbmRleFwiOiA2LCBcInBsYXRmb3Jtc1wiOiBbXCJpT1NcIiwgXCJBbmRyb2lkXCJdIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU29jaWFsU2hhcmluZy5wcm90b3R5cGUuc2hhcmVWaWFUd2l0dGVyID0gZnVuY3Rpb24gKG1lc3NhZ2UsIGltYWdlLCB1cmwpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcInNoYXJlVmlhVHdpdHRlclwiLCB7IFwic3VjY2Vzc0luZGV4XCI6IDMsIFwiZXJyb3JJbmRleFwiOiA0LCBcInBsYXRmb3Jtc1wiOiBbXCJpT1NcIiwgXCJBbmRyb2lkXCJdIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU29jaWFsU2hhcmluZy5wcm90b3R5cGUuc2hhcmVWaWFGYWNlYm9vayA9IGZ1bmN0aW9uIChtZXNzYWdlLCBpbWFnZSwgdXJsKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJzaGFyZVZpYUZhY2Vib29rXCIsIHsgXCJzdWNjZXNzSW5kZXhcIjogMywgXCJlcnJvckluZGV4XCI6IDQsIFwicGxhdGZvcm1zXCI6IFtcImlPU1wiLCBcIkFuZHJvaWRcIl0gfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTb2NpYWxTaGFyaW5nLnByb3RvdHlwZS5zaGFyZVZpYUZhY2Vib29rV2l0aFBhc3RlTWVzc2FnZUhpbnQgPSBmdW5jdGlvbiAobWVzc2FnZSwgaW1hZ2UsIHVybCwgcGFzdGVNZXNzYWdlSGludCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic2hhcmVWaWFGYWNlYm9va1dpdGhQYXN0ZU1lc3NhZ2VIaW50XCIsIHsgXCJzdWNjZXNzSW5kZXhcIjogNCwgXCJlcnJvckluZGV4XCI6IDUsIFwicGxhdGZvcm1zXCI6IFtcImlPU1wiLCBcIkFuZHJvaWRcIl0gfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTb2NpYWxTaGFyaW5nLnByb3RvdHlwZS5zaGFyZVZpYUluc3RhZ3JhbSA9IGZ1bmN0aW9uIChtZXNzYWdlLCBpbWFnZSkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic2hhcmVWaWFJbnN0YWdyYW1cIiwgeyBcInBsYXRmb3Jtc1wiOiBbXCJpT1NcIiwgXCJBbmRyb2lkXCJdIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU29jaWFsU2hhcmluZy5wcm90b3R5cGUuc2hhcmVWaWFXaGF0c0FwcCA9IGZ1bmN0aW9uIChtZXNzYWdlLCBpbWFnZSwgdXJsKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJzaGFyZVZpYVdoYXRzQXBwXCIsIHsgXCJzdWNjZXNzSW5kZXhcIjogMywgXCJlcnJvckluZGV4XCI6IDQsIFwicGxhdGZvcm1zXCI6IFtcImlPU1wiLCBcIkFuZHJvaWRcIl0gfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTb2NpYWxTaGFyaW5nLnByb3RvdHlwZS5zaGFyZVZpYVdoYXRzQXBwVG9SZWNlaXZlciA9IGZ1bmN0aW9uIChyZWNlaXZlciwgbWVzc2FnZSwgaW1hZ2UsIHVybCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic2hhcmVWaWFXaGF0c0FwcFRvUmVjZWl2ZXJcIiwgeyBcInN1Y2Nlc3NJbmRleFwiOiA0LCBcImVycm9ySW5kZXhcIjogNSwgXCJwbGF0Zm9ybXNcIjogW1wiaU9TXCIsIFwiQW5kcm9pZFwiXSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIFNvY2lhbFNoYXJpbmcucHJvdG90eXBlLnNoYXJlVmlhU01TID0gZnVuY3Rpb24gKG1lc3NnZSwgcGhvbmVOdW1iZXIpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcInNoYXJlVmlhU01TXCIsIHsgXCJwbGF0Zm9ybXNcIjogW1wiaU9TXCIsIFwiQW5kcm9pZFwiXSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIFNvY2lhbFNoYXJpbmcucHJvdG90eXBlLmNhblNoYXJlVmlhRW1haWwgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJjYW5TaGFyZVZpYUVtYWlsXCIsIHsgXCJwbGF0Zm9ybXNcIjogW1wiaU9TXCIsIFwiQW5kcm9pZFwiXSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIFNvY2lhbFNoYXJpbmcucHJvdG90eXBlLnNoYXJlVmlhRW1haWwgPSBmdW5jdGlvbiAobWVzc2FnZSwgc3ViamVjdCwgdG8sIGNjLCBiY2MsIGZpbGVzKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJzaGFyZVZpYUVtYWlsXCIsIHsgXCJwbGF0Zm9ybXNcIjogW1wiaU9TXCIsIFwiQW5kcm9pZFwiXSwgXCJzdWNjZXNzSW5kZXhcIjogNiwgXCJlcnJvckluZGV4XCI6IDcgfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTb2NpYWxTaGFyaW5nLnByb3RvdHlwZS5zaGFyZVZpYSA9IGZ1bmN0aW9uIChhcHBOYW1lLCBtZXNzYWdlLCBzdWJqZWN0LCBpbWFnZSwgdXJsKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJzaGFyZVZpYVwiLCB7IFwic3VjY2Vzc0luZGV4XCI6IDUsIFwiZXJyb3JJbmRleFwiOiA2LCBcInBsYXRmb3Jtc1wiOiBbXCJpT1NcIiwgXCJBbmRyb2lkXCJdIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU29jaWFsU2hhcmluZy5wcm90b3R5cGUuc2V0SVBhZFBvcHVwQ29vcmRpbmF0ZXMgPSBmdW5jdGlvbiAodGFyZ2V0Qm91bmRzKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJzZXRJUGFkUG9wdXBDb29yZGluYXRlc1wiLCB7IFwic3luY1wiOiB0cnVlLCBcInBsYXRmb3Jtc1wiOiBbXCJpT1NcIl0gfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTb2NpYWxTaGFyaW5nLnByb3RvdHlwZS5zYXZlVG9QaG90b0FsYnVtID0gZnVuY3Rpb24gKGZpbGVPckZpbGVBcnJheSkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic2F2ZVRvUGhvdG9BbGJ1bVwiLCB7IFwicGxhdGZvcm1zXCI6IFtcImlPU1wiXSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIFNvY2lhbFNoYXJpbmcucHJvdG90eXBlLnNoYXJlVmlhV2hhdHNBcHBUb1Bob25lID0gZnVuY3Rpb24gKHBob25lLCBtZXNzYWdlLCBmaWxlT3JGaWxlQXJyYXksIHVybCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic2hhcmVWaWFXaGF0c0FwcFRvUGhvbmVcIiwgeyBcInN1Y2Nlc3NJbmRleFwiOiA1LCBcImVycm9ySW5kZXhcIjogNiwgXCJwbGF0Zm9ybXNcIjogW1wiaU9TXCIsIFwiQW5kcm9pZFwiXSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIFNvY2lhbFNoYXJpbmcucGx1Z2luTmFtZSA9IFwiU29jaWFsU2hhcmluZ1wiO1xuICAgIFNvY2lhbFNoYXJpbmcucGx1Z2luID0gXCJjb3Jkb3ZhLXBsdWdpbi14LXNvY2lhbHNoYXJpbmdcIjtcbiAgICBTb2NpYWxTaGFyaW5nLnBsdWdpblJlZiA9IFwicGx1Z2lucy5zb2NpYWxzaGFyaW5nXCI7XG4gICAgU29jaWFsU2hhcmluZy5yZXBvID0gXCJodHRwczovL2dpdGh1Yi5jb20vRWRkeVZlcmJydWdnZW4vU29jaWFsU2hhcmluZy1QaG9uZUdhcC1QbHVnaW5cIjtcbiAgICBTb2NpYWxTaGFyaW5nLnBsYXRmb3JtcyA9IFtcIkFuZHJvaWRcIiwgXCJCcm93c2VyXCIsIFwiaU9TXCIsIFwiV2luZG93c1wiLCBcIldpbmRvd3MgUGhvbmVcIl07XG4gICAgU29jaWFsU2hhcmluZy5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IGNvcmUkMS5JbmplY3RhYmxlIH1cbiAgICBdO1xuICAgIHJldHVybiBTb2NpYWxTaGFyaW5nO1xufShjb3JlLklvbmljTmF0aXZlUGx1Z2luKSk7XG5cbmV4cG9ydHMuU29jaWFsU2hhcmluZyA9IFNvY2lhbFNoYXJpbmc7XG4iXX0=